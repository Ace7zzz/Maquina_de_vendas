// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "06/18/2021 16:37:41"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          maquina_de_vendas
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module maquina_de_vendas_vlg_vec_tst();
// constants                                           
// general purpose registers
reg clk;
reg [1:0] moeda;
reg [3:0] tecla;
// wires                                               
wire D1;
wire D2;
wire D3;
wire D4;
wire DM;
wire LP;
wire existeProduto;
wire [7:0] segmentos;
wire [1:0] state;
wire timeOut;

// assign statements (if any)                          
maquina_de_vendas i1 (
// port map - connection between master ports and signals/registers   
	.D1(D1),
	.D2(D2),
	.D3(D3),
	.D4(D4),
	.DM(DM),
	.LP(LP),
	.clk(clk),
	.existeProduto(existeProduto),
	.moeda(moeda),
	.segmentos(segmentos),
	.state(state),
	.tecla(tecla),
	.timeOut(timeOut)
);
initial 
begin 
#100000000 $finish;
end 

// clk
always
begin
	clk = 1'b0;
	clk = #1000000 1'b1;
	#1000000;
end 
// moeda[ 1 ]
initial
begin
	moeda[1] = 1'b0;
end 
// moeda[ 0 ]
initial
begin
	moeda[0] = 1'b0;
end 
// tecla[ 3 ]
initial
begin
	tecla[3] = 1'b0;
	tecla[3] = #6000000 1'b1;
	tecla[3] = #2000000 1'b0;
	tecla[3] = #2000000 1'b1;
	tecla[3] = #2000000 1'b0;
	tecla[3] = #2000000 1'b1;
	tecla[3] = #2000000 1'b0;
end 
// tecla[ 2 ]
initial
begin
	tecla[2] = 1'b0;
end 
// tecla[ 1 ]
initial
begin
	tecla[1] = 1'b0;
end 
// tecla[ 0 ]
initial
begin
	tecla[0] = 1'b0;
end 
endmodule

